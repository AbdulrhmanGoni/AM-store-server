{
  "Create a controller function": {
    "scope": "javascript,typescript",
    "prefix": "cf",
    "body": [
      "export default async function ${TM_FILENAME_BASE}() {",
      "	try {",
      "        $0",
      "	} catch (error) {",
      "        console.log(error)",
      "        return;",
      "	}",
      "}"
    ],
    "description": "Createa a controller function exported as default and has a ready try catch block"
  },
  "Create a route handler function": {
    "scope": "javascript,typescript",
    "prefix": "rhf",
    "body": [
      "import asyncRouteHandler from \"../../utilities/asyncRouteHandler.js\";\n",
      "export default asyncRouteHandler(",
      "    async function ${TM_FILENAME_BASE}(req, res) {",
      "        $0",
      "    }",
      ")"
    ],
    "description": "Createa a route handler function exported as default, takes (req, res) parameters and has a ready try catch block"
  },
  "Prepare a jest test file": {
    "scope": "javascript,typescript",
    "prefix": "jtf",
    "body": [
      "import { userRequest, closeTestingServer } from \"../../helpers/testRequest.js\"\n",
      "afterAll(async () => {",
      "    await closeTestingServer()",
      "})\n",
      "const routePath = \"/api/\"\n",
      "describe(\"Test '${TM_FILENAME_BASE}' route handler\", () => {",
      "    it(\"Should returns \", async () => {",
      "        const response = await userRequest(routePath, \"\")",
      "        expect(response.statusCode).toBe(200)",
      "    })",
      "})"
    ],
    "description": "Prepare the main jest functions structure for starting test a specific route"
  }
}
